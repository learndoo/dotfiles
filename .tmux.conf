# See http://man.openbsd.org/OpenBSD-current/man1/tmux.1

#####################################
##### TMUX CONFIGURATION ############
#####################################
## From terminal, not TMUX, do the following to set 256 colors
## Can check with tput colors
## [ -z "$TMUX" ] && export TERM=xterm-256color

# Load private settings if they exist
# if-shell "[ -f ~/.tmux.private]" "source ~/.tmux.private"

# Load ide startup if exists
# if-shell "[ -f ~/.tmux.ide]" "source ~/.tmux.conf.ide"

# Increase command buffer scrollback/history limit
set -g history-limit 2048

# Set the base index for windows and panes to 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Make Vim responsive to esc
set -s escape-time 0

# Keep plenty of history for scrollback
set -g history-limit 10000

#############################
##### PREFIX KEY ############
#############################

# Reduce the delay between prefix and command
set -s escape-time 1

# CHANGE PREFIX FROM C-b to C-a
# and ensure that we can send Ctrl-A to other apps
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Return to previous window when prefix is pressed twice
bind C-a last-window
bind ` last-window

# Allow swapping C-a and ` using F11/F12
bind F11 set-option -g prefix C-a
bind F12 set-option -g prefix `

################################
##### CONTROL ############
################################
## mouse support (commented parts are unchecked for syntax from 
## https://github.com/christoomey/dotfiles/blob/42bc8e822c5ebae586c73fe1cfd96c758e68439e/tmux/tmux.conf#L94)
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
set -g mouse on
#setw -g mode-mouse on

##########################
##### SESSIONS ############
##########################
# Goto prev/next:    prefix + ( or )
# Detach session:    prefix + d
#       Reattach:       $ tmux attach
# Rename session:    prefix + $

## # Exit TMUX and kill all windows: prefix + :kill-session

# Navigate across sessions, windows and panes
# prefix - s (and arrows)

# RESURRECT SESSION CONTROL
# Save entire tmux session: prefix + C-s
# Restore session:          prefix + C-r

## # SESSIONIST SESSIONS
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C - prompt for creating a new session by name.
# prefix + X - kill current session without detaching tmux.
# prefix + S - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.

##########################
##### WINDOWS ############
##########################
# New window:       F9 OR prefix + c
# Rename window:    prefix + ,
# Goto window nbr:  prefix + [0-9]
# Prev/next window: prefix + p or n
# Kill window:      prefix + &

# Move curr window one position left: prefix + < OR right: prefix + >
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# F9 new workspace
bind-key -n F9 new-window

########################
##### PANES ############
##################################
# Switch pane: ctrl-arrow
# Seems to require prefix, but not sure
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# Split horizontal:       prefix + | or prefix + %
#       Full horizontal:  prefix + \   (backslash)
#
bind | split-window -c "#{pane_current_path}" -h
bind % split-window -c "#{pane_current_path}" -h
bind \ split-window -c "#{pane_current_path}" -fh

# Split vertical:         prefix + - or prefix + "
#       Full vertical:    prefix + _
#
bind - split-window -c "#{pane_current_path}" -v
bind '"' split-window -c "#{pane_current_path}" -v
bind _ split-window -c "#{pane_current_path}" -fv

# Toggle pane zoom:     prefix + z

# Resize pane:          prefix + Ctrl-Left / Ctrl-Right
bind -r C-Left  resize-pane -L 5
bind -r C-Right resize-pane -R 5
bind -r C-Up    resize-pane -U 5
bind -r C-Down  resize-pane -D 5

# Kill current pane:    prefix + x  (then confirm)

######################################
##### CONVENIENCE SHORTCUTS ##########
######################################
# Reload tmux config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Synchronize-panes toggle (type in all panes at once)
bind C-s set-window-option synchronize-panes

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/logs/#W.log" \; display "Toggled logging to ~/logs/#W.log"

############################
##### STATUS LINE ##########
############################
# Status line left side to show Session:window:pane
set -g status-left-length 40
set -g status-left "#[fg=green]S#S W#[fg=yellow]#I P#[fg=cyan]#P"

# Status line right side -  50% | 31 Oct 13:37
# set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"
# Overridden below for plugins!!!

# Update the status line every N seconds
set -g status-interval 10
	
# Center the window list in the status line
set -g status-justify centre
 	
# Status line colors
set -g status-style fg=white,bg=black
	
##############################
##### LOOK AND FEEL ##########
##############################
# Set default terminal mode
set -g default-terminal "screen-256color"

# Renumber windows when closing window in the middle
set-option -g renumber-windows on

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
#set-option -g bell-action any
#set-option -g visual-bell off

# Shade out inactive panes
setw -g window-style fg=colour240,bg=colour235
setw -g window-active-style fg=white,bg=black

# Active window colors
setw -g window-status-current-style fg=white,bold,bg=red
	
# Window list colors
setw -g window-status-style fg=cyan,bg=black
 	
# Pane border colors
setw -g pane-border-style fg=green,bg=black
setw -g pane-active-border-style fg=white,bg=yellow
	
# Command / message line colors
setw -g message-style fg=white,bold,bg=black

# Extend display of error messages (millisecs)
set-option -g display-time 6000

# Automatically set window titles
#set-option -g set-titles on
#set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)

# Statusbar Adjustments
#set -g status-left "#[fg=red] #H#[fg=green]:#[fg=white]#S#[fg=green] |#[default]"

# Show performance counters in statusbar
# Requires https://github.com/thewtex/tmux-mem-cpu-load/
#set -g status-interval 4
#set -g status-right "#[fg=green] | #[fg=white]#(tmux-mem-cpu-load)#[fg=green] | #[fg=cyan]%H:%M #[default]"



##################################################
####### MANUAL LOOK AND FEEL OVERRIDES ###########
##################################################
### Theme
###########################################################################
#
# Statusbar Color Palatte
#set-option -g status-justify left
#set-option -g status-bg black
#set-option -g status-fg white
#set-option -g status-left-length 40
#set-option -g status-right-length 80
# 
# Pane Border Color Palette
#set-option -g pane-active-border-fg green
#set-option -g pane-active-border-bg black
#set-option -g pane-border-fg white
#set-option -g pane-border-bg black
# 
# Message Color Palette
#set-option -g message-fg black
#set-option -g message-bg green
# 
# Window Status Color Palette
#setw -g window-status-bg black
#setw -g window-status-current-fg green
#setw -g window-status-bell-attr default
#setw -g window-status-bell-fg red
#setw -g window-status-activity-attr default
#setw -g window-status-activity-fg yellow

#############################
##### FOR SOLARIZED #########
#############################
#  From https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#############################
# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

#############################
##### ENABLE VIM ############
#############################

#############
# # FAILED TO WORK...
# # Fix arrow keys for vim
# # See https://stackoverflow.com/questions/15445481/mapping-arrow-keys-when-running-tmux
# # Also requires code in .vimrc
set-option -gw xterm-keys on
#############

# setw -g mode-keys vi    # Allows navigating with VI keys in a tmux window
 
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-Left if-shell "$is_vim" "send-keys C-Left"  "select-pane -L"
bind-key -n C-Down if-shell "$is_vim" "send-keys C-Down"  "select-pane -D"
bind-key -n C-Up if-shell "$is_vim" "send-keys C-Up"  "select-pane -U"
bind-key -n C-Right if-shell "$is_vim" "send-keys C-Right"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"  # Previous
bind-key -T copy-mode-vi C-Left select-pane -L
bind-key -T copy-mode-vi C-Down select-pane -D
bind-key -T copy-mode-vi C-Up select-pane -U
bind-key -T copy-mode-vi C-Right select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l  # Previous
# Replacement shortcut for clear screen due to conflict with above mappings
#bind C-l send-keys 'C-l'

###############################
##### SETUP FOR PLUGINS #######
###############################

## tmux-loadavg for color coded cpu load (Prefix - U to update) 
## Edit your status-left or status-right setting to include one of
## #{load_short} - display the 1min load average
## #{load_full} - display the 1min, 5min and 15min load averages
## The values are coloured green, orange or red depending on how they compare to the number of CPUs you have.
## For example in .tmux.conf:
## display 1min load average and hostname on right of status bar
## set -g status-right " #{load_short} #h

# For tmux-prefix-highlight
# set -g status-right '#{prefix_highlight} | #[fg=blue]%a %Y-%m-%d %H:%M'
set -g status-right '#{prefix_highlight} Online: #{online_status} | %a %Y-%m-%d %H:%M'
set -g @prefix_highlight_fg 'white' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
## # Status line example configurations...
## # set -g status-left '#[fg=brightblue,bg=grey] #[fg=white] #S | #h |'75 
## # set -g status-right "#[fg=colour202]#(lastad.sh) #[fg=218,noblink,bg=colur235]#[fg=red]#(~/tmux/online.sh)
## # set -g status-right '#{prefix_highlight} Online: #{online_status} Continuum status: #{continuum_status} #(~/battery Discharging) | %a %Y-%m-%d %H:%M'
## # set -g status-right '#{prefix_highlight} Continuum status: #{continuum_status} #(~/battery Discharging) | %a %Y-%m-%d %H:%M'
## # Status line right side -  50% | 31 Oct 13:37
## # set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

# For tmux-online-status (plus add "Online: #{online_status}" to status-right)
# NOTE: Status will delay 5-60 seconds based on the status-interval Tmux option
# set -g @online_icon "ok"           # ONLY if icons dont display well
# set -g @offline_icon "offline!"    # ONLY if icons dont display well

# Continuum Plugin
# Last tmux environment saved is automatically reloaded
# Requires Resurrect
# If tmux installed as root, resurrect requires chmod 755 ~/.tmux
#set -g @continuum-restore 'on'
#set -g @continuum-save-interval '15'   # Default is 15 mins; 0 for no autosave

# tmux-colors-solarizeed
# set -g @colors-solarized '256'   # the default
# set -g @colors-solarized 'dark'
# set -g @colors-solarized 'light'
# set -g @colors-solarized 'base16'

###############################
##### TMUX PLUGINS ############
###############################
# NOTE: Prefix + I is required to load the plugin after installed
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'

# tmux-loadavg for color coded cpu load (Prefix - U to update) 
set -g @plugin 'jamesoff/tmux-loadavg'               
# Edit your status-left or status-right setting to include one of
# #{load_short} - display the 1min load average
# #{load_full} - display the 1min, 5min and 15min load averages
# The values are coloured green, orange or red depending on how they compare to the number of CPUs you have.
# For example in .tmux.conf:
# display 1min load average and hostname on right of status bar
# set -g status-right " #{load_short} #h

# Another theme alternative (seems to be an airline alternative) 
# https://github.com/jimeh/tmux-themepack
# Pick a theme (seems there is a very nice basic that is not the default in the screenshots) 
# set -g @themepack 'basic' (default)
# set -g @themepack 'powerline/block/blue'
# set -g @themepack 'powerline/block/cyan'
# set -g @themepack 'powerline/default/gray'
# set -g @themepack 'powerline/double/magenta'
# End tmux-themepack

# set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum' # NOTE: Depends on resurrect
# set -g @plugin 'tmux-plugins/tmux-sessionist'
# NOT PLANNED
# set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'seebi/tmux-colors-solarized'
# Tmuxinator - use configuration files to define tmux setups
# https://github.com/tmuxinator/tmuxinator (Make sure you set first pane option)
# set -g @plugin 'christoomey/vim-tmux-navigator'  # Using manual config lines instead
#    NOTE: Some vim-tmux-navigator commands are defined by the plugin, you can use them
#          nnoremap <C-W>l :TmuxNavigateRight<CR>
#          Have a look at the plugin's code for more informations.
#    And note you can also disable the default mapping with the variable
#          g:tmux_navigator_no_mappings

# Create small repl like tmux command window in vim under tmux
# https://github.com/benmills/vimux

#### RUBY SPECIFIC PLUGINS
# See one list at https://github.com/benmills/vimux

## # Examples of Plugin Management using TPM
## # Supports `github_username/repo` or full git repo URLs
## # set -g @plugin 'nhdaly/tmux-better-mouse-mode'
## # set -g @plugin 'tmux-plugins/tmux-sensible'
## # set -g @plugin 'github_username/plugin_name'
## # set -g @plugin 'git@github.com/user/plugin'
## # set -g @plugin 'git@bitbucket.com/user/plugin'

## ## INSTALL PLUGINS ##
# Note: Bug Workaround to load plugins - https://github.com/tmux-plugins/tpm/issues/105
run '~/.tmux/plugins/tpm/bin/install_plugins'
run '~/.tmux/plugins/tpm/bin/update_plugins all'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

########################################################
############### KEY BINDING SUMMARY ####################
###############   UNMODIFIED SAMPLE ####################
##### FROM https://learnxinyminutes.com/docs/tmux/ #####
########################################################
#----------------------------------------------------------------------
#  (C-b) = Ctrl + b    # 'Prefix' combination required to use keybinds
#
#  (M-1) = Meta + 1 -or- Alt + 1
#----------------------------------------------------------------------
#
#  ?                  # List all key bindings
#  :                  # Enter the tmux command prompt
#  r                  # Force redraw of the attached client
#  c                  # Create a new window
#
#  !                  # Break the current pane out of the window.
#  %                  # Split the current pane into two, left and right
#  "                  # Split the current pane into two, top and bottom
#
#  n                  # Change to the next window
#  p                  # Change to the previous window
#  {                  # Swap the current pane with the previous pane
#  }                  # Swap the current pane with the next pane
#
#  s                  # Select a new session for the attached client
#                     interactively
#  w                  # Choose the current window interactively
#  0 to 9             # Select windows 0 to 9
#
#  d                  # Detach the current client
#  D                  # Choose a client to detach
#
#  &                  # Kill the current window
#  x                  # Kill the current pane
#
#  Up, Down           # Change to the pane above, below, left, or right
#  Left, Right
#
#  M-1 to M-5         # Arrange panes:
#                       # 1) even-horizontal
#                       # 2) even-vertical
#                       # 3) main-horizontal
#                       # 4) main-vertical
#                       # 5) tiled
#
#  C-Up, C-Down       # Resize the current pane in steps of one cell
#  C-Left, C-Right
#
#  M-Up, M-Down       # Resize the current pane in steps of five cells
#  M-Left, M-Right
# 
  
